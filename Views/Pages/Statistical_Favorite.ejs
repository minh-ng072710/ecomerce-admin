<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <script src="https://www.gstatic.com/firebasejs/7.2.3/firebase-app.js"></script>

    <script src="https://www.gstatic.com/firebasejs/7.2.3/firebase-analytics.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.2.3/firebase-firestore.js"></script>

    <title>test chart</title>
</head>

<body>
    <div class="container">
        <canvas id="mychart" width="600" height="250" style=" margin-top: 84px;">

        </canvas>
        <canvas id="mychart1">

        </canvas>
    </div>

    <script>
        var firebaseConfig = {
            apiKey: "AIzaSyAVBtWsFEvEZVT4A7rcTV2nRtfj13I5BI0",
            authDomain: "ecommerce-3b4a8.firebaseapp.com",
            databaseURL: "https://ecommerce-3b4a8.firebaseio.com",
            projectId: "ecommerce-3b4a8",
            storageBucket: "ecommerce-3b4a8.appspot.com",
            messagingSenderId: "359580994105",
            appId: "1:359580994105:web:cd475d76e870b4169f1be8",
            measurementId: "G-PC5T29FZVN"
        };

        firebase.initializeApp(firebaseConfig);
        firebase.analytics();
        const db = firebase.firestore(firebase)


        db.collection("Feedback")
            .onSnapshot(async function (doc) {
                let listfeedback = []
                await db.collection("Feedback").get().then(snapshot => {
                    snapshot.forEach(doc => {
                        listfeedback.push(doc.data())//feedback

                    })
                })
                let listrating = []
                let lisproid = []
                await listfeedback.forEach((arr) => {
                    listrating.push(arr.rating)
                    lisproid.push(arr.proID)
                })


                let listproduct = async function () {
                    const listprobyID = []
                    for (var i = 0; i < listproID.length; i++) {
                        await db.collection('Product')
                            .where('proID', '==', listproID[i])
                            .get().then(snapshot => {
                                if (snapshot.empty) {
                                    console.log("No document")
                                }
                                snapshot.forEach(doc => {
                                    this.listprobyID = []
                                    listprobyID.push(doc.data())
                                })
                                return;

                            })

                    }
                    return listprobyID

                }

            

                var ctx = document.getElementById('mychart').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: lisproid,
                        datasets: [{
                            barPercentage: 0.5,
                            barThickness: 6,
                            maxBarThickness: 8,
                            minBarLength: 2,
                            label: 'THỐNG KÊ THEO LƯỢT THÍCH',
                            data: listrating,
                            pointBackgroundColor: 'rgba(255,99,132,0.6)',

                            backgroundColor: [
                                'rgba(255,99,132,0.6)',
                                'rgba(45,162,235,0.6)',
                                'rgba(20,206,86,0.6)',
                                'rgba(255,99,86,0.6)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',

                            ],
                            borderWidth: 4,
                            borderColor: '#777',
                            hoverBorderWidth: 3,
                            hoverBorderColor: '#000'
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            })
    </script>
    <script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>